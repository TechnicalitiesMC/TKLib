name: Build and Publish Tag
on:
  push:
    tags:
      - 'v*' # When code is pushed to any tag
jobs:
  build-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Tag
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          gradle-version: wrapper
          arguments: build publish
        env:
          GPR_USER: ${{ secrets.GPR_USER }}
          GPR_KEY: ${{ secrets.GPR_KEY }}
          TKLIB_PUBLISH_URL: ${{ secrets.MAVEN_PUBLISH_URL }}
          TKLIB_PUBLISH_USER: ${{ secrets.MAVEN_PUBLISH_USER }}
          TKLIB_PUBLISH_PASS: ${{ secrets.MAVEN_PUBLISH_PASS }}
          TKLIB_RELEASE: true
      - name: Create Release With Changelog
        uses: amadornes/release-with-changelog@v3
        id: create_release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-template: '- {title} ({hash})'
          template: |
            ### Changelog
            {commits}
      - name: Upload Binaries
        uses: NBTX/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          targets: build/libs/**.jar

      # This whole section is skipped if we're in a dev repo
      - name: Parse Release Properties
        uses: amadornes/parse-properties-action@v1.0
        if: ${{ !endsWith(github.repository, '-Dev') }}
        id: release_props
        with:
          file: 'release.properties'
      - name: Extract Version From Tag
        uses: sunil-samtani/regex-action@v2
        if: ${{ !endsWith(github.repository, '-Dev') }}
        id: version
        with:
          regex_pattern: 'refs\/tags\/v(.+)'
          search_string: ${{ github.ref }}
      - name: Release on CurseForge
        uses: itsmeow/curseforge-upload@v3.1.0
        if: ${{ !endsWith(github.repository, '-Dev') }}
        with:
          token: "${{ secrets.CF_API_TOKEN }}"
          project_id: ${{ steps.release_props.outputs.cf_project }}
          game_endpoint: "minecraft"
          game_versions: ${{ steps.release_props.outputs.cf_versions }}
          file_path: ${{ format(steps.release_props.outputs.file, steps.version.outputs.match_grp) }}
          release_type: ${{ steps.release_props.outputs.cf_type }}
          display_name: ${{ format(steps.release_props.outputs.cf_name, steps.version.outputs.match_grp) }}
          changelog: ${{ steps.create_release.outputs.changelog }}
          changelog_type: markdown
          relations: ${{ steps.release_props.outputs.cf_relations }}
